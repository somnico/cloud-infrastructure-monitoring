services:
  # Grafana service configuration
  grafana:
    environment:
      # Set Grafana provisioning path
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      # Set Grafana admin username
      - GF_SECURITY_ADMIN_USER=admin
      # Set Grafana admin password
      - GF_SECURITY_ADMIN_PASSWORD=password

      # Enable SMTP for email notifications
      - GF_SMTP_ENABLED=true
      # SMTP host configuration
      - GF_SMTP_HOST=smtp.gmail.com:587
      # SMTP user email
      - GF_SMTP_USER=<email_here>
      # SMTP user password
      - GF_SMTP_PASSWORD=<password_here>
      # Email address for Grafana
      - GF_SMTP_FROM_ADDRESS=<email_here>
      # Display name for emails sent by Grafana
      - GF_SMTP_FROM_NAME=Grafana
      # Enable TLS for SMTP
      - GF_SMTP_TLS_ENABLED=true
    entrypoint:
      # Use shell as the entrypoint
      - sh
      - -euc
      - |
        # Create provisioning directory for datasources
        mkdir -p /etc/grafana/provisioning/datasources
        # Create datasource configuration file
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        # Configure Loki as a datasource
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          version: 1
          editable: false
        # Configure Prometheus as a datasource and set it as default
        - name: Prometheus
          type: prometheus
          url: http://prometheus:9090/
          access: proxy
          isDefault: true
        EOF
        # Run the Grafana startup script
        /run.sh
    # Use the latest Grafana image
    image: grafana/grafana:latest
    ports:
      # Expose port 3000 for Grafana
      - '3000:3000'
    networks:
      - grafana
    volumes:
      # Persist Grafana data
      - grafana-data:/var/lib/grafana

  # Loki service configuration
  loki:
    image: grafana/loki:2.9.2
    ports:
      # Expose port 3100 for Loki
      - '3100:3100'
    volumes:
      # Mount local Loki configuration file
      - /etc/loki/local-config.yaml:/etc/loki/local-config.yaml
      # Persist Loki data
      - loki-data:/loki      
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - grafana

  # Prometheus service configuration
  prometheus:
    image: prom/prometheus:latest
    volumes:
      # Mount Prometheus configuration file
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      # Mount Prometheus rules file
      - ./rules.yml:/etc/prometheus/rules.yml
      # Persist Prometheus data
      - prometheus_data:/prometheus
    command:
      # Specify Prometheus configuration file
      - '--config.file=/etc/prometheus/prometheus.yml'
      # Specify storage path for Prometheus
      - '--storage.tsdb.path=/prometheus'
    ports:
      # Expose port 9090 for Prometheus
      - '9090:9090'
    networks:
      - grafana

  # Alertmanager service configuration
  alertmanager:
    image: prom/alertmanager
    privileged: true
    volumes:
      # Mount Alertmanager configuration file
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      # Specify Alertmanager configuration file
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    ports:
      # Expose port 9093 for Alertmanager
      - '9093:9093'
    networks:
      - grafana

  # NGINX Prometheus Exporter configuration
  nginx-prometheus-exporter:
    image: nginx/nginx-prometheus-exporter:1.1.0
    command: --nginx.scrape-uri=http://10.75.144.27:8080/status
    ports:
      # Expose port 9113 for NGINX exporter
      - '9113:9113'

  # Artifactory Exporter configuration
  artifactory_exporter:
    image: peimanja/artifactory_exporter:latest
    ports:
      # Expose port 9531 for Artifactory exporter
      - '9531:9531'
    env_file:
      # Specify environment file for Artifactory exporter
      - /opt/exp/env.env
    command: --optional-metric=artifacts --optional-metric=replication_status

# Define named volumes for persistence
volumes:
  grafana-data:
  loki-data:
  prometheus_data:

# Define the network for the services
networks:
  grafana:
    driver: bridge
